namePrefix: "yahoo-"
nameSuffix: "-use2"

metricsServer:
  enabled: false
  name: "metrics-server"
  namespace: yahoo-use2-argocd
  project: yahoo-use2-infrastructure
  destination:
    server: "https://kubernetes.default.svc"
    namespace: kube-system
  source:
    repoURL: "https://kubernetes-sigs.github.io/metrics-server/"
    targetRevision: "3.11.0"
    chart: metrics-server
  syncPolicy:
    automated:
      prune: true
      selfHeal: true

awsLoadBalancerController:
  enabled: false
  name: "aws-load-balancer-controller"
  namespace: yahoo-use2-argocd
  project: yahoo-use2-infrastructure
  destination:
    server: "https://kubernetes.default.svc"
    namespace: kube-system
  source:
    repoURL: "https://aws.github.io/eks-charts"
    targetRevision: 1.6.2
    chart: aws-load-balancer-controller
  syncPolicy:
    automated:
      prune: true
      selfHeal: true

  ingresses:

nginxIngressController:
  enabled: false
  name: "nginx-ingress"
  namespace: yahoo-argocd-use2
  project: yahoo-use2-infrastructure
  destination:
    server: "https://kubernetes.default.svc"
    namespace: kube-system
  source:
    repoURL: "https://kubernetes.github.io/ingress-nginx"
    targetRevision: 4.11.2
    chart: ingress-nginx
    helm:
      values: |
        controller:
          resources:
            limits:
              cpu: 200m
              memory: 384Mi
            requests:
              cpu: 50m
              memory: 384Mi
          ingressClassResource:
            name: yahoo-use2-ingress-nginx
            enabled: true
          ingressClassByName: true
          publishService:
            enabled: true
          service:
            type: NodePort
            nodePorts:
              http: 32080
              https: 32443
            annotations:
              service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
              service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
          config:
            use-forwarded-headers: "true"
            use-gzip: true

          kind: Deployment
          replicaCount: 2

          nodeSelector:
            C8App: "C8App"

          updateStrategy:
            type: RollingUpdate
            rollingUpdate:
              maxUnavailable: 0

          podSecurityContext:
            runAsUser: 101
            runAsGroup: 82

          podSecurityContext:
            runAsUser: 65534
            runAsGroup: 65534
            seccompProfile:
              type: RuntimeDefault
  syncPolicy:
    automated:
      prune: true
      selfHeal: true